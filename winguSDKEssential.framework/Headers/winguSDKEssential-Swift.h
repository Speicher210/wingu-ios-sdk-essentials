// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import CoreLocation;
@import Foundation;
@import UserNotifications;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="winguSDKEssential",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// <code>Component</code> is a base class for all elements configurable inside wingu portal. It represents single object created inside your content.<br/>
/// The base <code>Component</code> object shouldn’t be used or created directly.
SWIFT_CLASS("_TtC17winguSDKEssential9Component")
@interface Component : NSObject
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Action Component is element that trigger redirection from the deck. Currently support types are listed under <code>ActionComponent.ActionType</code> section<br>
/// Example view generated using this component will look like this:
/// <img src="../docs_assets/ActionComponent.png" alt="Action Component"/>
/// Where you can change parameters like corner radius, fonts and colors.
SWIFT_CLASS("_TtC17winguSDKEssential15ActionComponent")
@interface ActionComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Contain informations about address in readable format. Usually associated with <code>Location</code> object.
SWIFT_CLASS("_TtC17winguSDKEssential7Address")
@interface Address : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Contains information about image and it’s alignment.
SWIFT_CLASS("_TtC17winguSDKEssential14AlignmentImage")
@interface AlignmentImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Contains information about text alignment.
SWIFT_CLASS("_TtC17winguSDKEssential13AlignmentText")
@interface AlignmentText : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Contains information about album that is associated with mp3 file imported to wingu portal.<br>
/// This will filled up with ID3 (or ID3v2) tags from mp3 file.
SWIFT_CLASS("_TtC17winguSDKEssential10AudioAlbum")
@interface AudioAlbum : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Describes information about media inside <code>AudioPlaylistComponent</code><br/>
/// By default it’s mp3 files and some parameters (ex. <code>album</code>) is based on mp3 tags. Some of them are fetched from wingu portal (ex. <code>name</code>)
SWIFT_CLASS("_TtC17winguSDKEssential10AudioMedia")
@interface AudioMedia : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Match Audio Component configurable in wingu portal. <br/>
/// <img src="../docs_assets/AudioPlaylistComponent.png" alt="Audio Playlist Component"/><br/>
/// This is a collection of mp3 playable whenever <code>Deck</code> is on screen. It’s partially based on mp3 ID3 tags and partially on configuration in wingu portal.
SWIFT_CLASS("_TtC17winguSDKEssential22AudioPlaylistComponent")
@interface AudioPlaylistComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Contains information about background color.
SWIFT_CLASS("_TtC17winguSDKEssential10Background")
@interface Background : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Typically associated with CouponComponent object. Represent barcode that can be scanned using other readers.
SWIFT_CLASS("_TtC17winguSDKEssential7Barcode")
@interface Barcode : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Base representation of some wingu trigger configured in portal. All detailed triggers like <code>Geofence</code> or <code>Beacon</code> will inherit from this class.<br/>
/// Detailed information about triggers can be found in class specific for every type. This class contain parameters related to wingu portal or time of discovery.</br>
/// <blockquote>
/// <em>Note:</em> All delegates method will always return <code>Channel</code> or collection of <code>Channel</code> even if you monitor only for one type.
///
/// </blockquote>
/// However object of this class without subclass cannot be used for anything inside wingu SDK. Initialization should be avoided and all method will map to one of the supported subclass.<br/>
/// <img src="../docs_assets/Channel.png" alt="Channel"/></br>
/// <code>Pack</code> collection for multilanguage is not supported with current version of the SDK. It will be returned always with end-user device language whenever your configured content on wingu portal supports it.
SWIFT_CLASS("_TtC17winguSDKEssential7Channel")
@interface Channel : NSObject
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Representation of <code>CoreLocation</code> class <code>CLBeacon</code> with extra arguments from wingu portal.<br/>
/// This class combines fetched arguments from wingu portal such as <code>Deck</code>, <code>Pack</code>, <code>Content</code> and match it with physical characteristic of the beacon. All parameters from <code>CLBeacon</code> will be matched with the same naming to this class.<br/>
/// <blockquote>
/// <em>Note</em>: This is not extend or override any <code>CLBeacon</code> parameters. Any changes in object of this class will not take any effect in physical beacon!<br/>
///
/// </blockquote>
/// This class is marked as <code>final</code>, this shouldn’t need subclassed. If there is a need to change minor/major/uuid of physical beacon this should be done with beacons manufacturer dedicated application or SDK.
SWIFT_CLASS("_TtC17winguSDKEssential6Beacon")
@interface Beacon : Channel
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end












@interface Beacon (SWIFT_EXTENSION(winguSDKEssential))
/// :nodoc:
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end








/// Layer of abstraction for <code>CoreLocation</code> ranging & monitoring iBeacons. This is build using Singleton principle. There will never be a need to use more than one instance of <code>BeaconScanner</code> to work with wingu beacons. By default regions to monitor and ranging are equal and default wingu regions apply if not specyfied otherwise.
SWIFT_CLASS("_TtC17winguSDKEssential13BeaconScanner")
@interface BeaconScanner : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// Associated with <code>Geofence</code>. Contains values that descibe specyfic area created in wingu portal.<br/>
/// Usually it’s 5 coordinates in collection from SE to SW clockwise and close the shape.
/// <img src="../docs_assets/Boundaries.gif" alt="Boundaries"/></br>
/// Check all available types in <code>BoundaryType</code> enum.
SWIFT_CLASS("_TtC17winguSDKEssential8Boundary")
@interface Boundary : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








/// BrandBarComponent is a representation of Brand bar created in wingu portal.<br/>
/// Brand bar allow to put text and image.
SWIFT_CLASS("_TtC17winguSDKEssential17BrandBarComponent")
@interface BrandBarComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end
















/// CMSComponent is a representation of Markdown or HTML component created in wingu portal.
SWIFT_CLASS("_TtC17winguSDKEssential12CMSComponent")
@interface CMSComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Defines position of components inside <code>Deck</code>.
SWIFT_CLASS("_TtC17winguSDKEssential4Card")
@interface Card : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






























/// It is a representation of info card in wingu portal. It may look like this:<br/>
/// <img src="../docs_assets/ContactComponent.png" alt="Contact Component"/></br>
/// It is possible to store all information in iOS default <code>Contacts</code> app, however there is need to add <code>NSContactsUsageDescription</code> in <code>Info.plist</code> file.
/// <blockquote>
/// <em>Note:</em> iOS 11+ will raise any helpful flag and simply app will crash in case of missing key in <code>Info.plist</code> file mentioned above.
///
/// </blockquote>
/// By default all links will be <code>https</code> ready from wingu portal if not specified otherwise.
SWIFT_CLASS("_TtC17winguSDKEssential16ContactComponent")
@interface ContactComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Contain detail information about address split into different field<br/>
/// This should help show address using Maps app directly from <code>ContactComponent</code>.
SWIFT_CLASS("_TtC17winguSDKEssential23ContactComponentAddress")
@interface ContactComponentAddress : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Social Media references. In Contacts apps there are facebook, twitter and yelp already natively supported. Google + will be transfered to plain texts or skipped, since there is no support for it in OS level.
SWIFT_CLASS("_TtC17winguSDKEssential18ContactSocialMedia")
@interface ContactSocialMedia : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Contains informations about components configured in wingu portal and languages that it’s available.
/// <blockquote>
/// <em>Note:</em> There is no need to manually selected languages. It will automatically match device preferences.
///
/// </blockquote>
/// There is possible that <code>Channel</code> object can exist without content. Force casting is hightly unrecommended.
SWIFT_CLASS("_TtC17winguSDKEssential7Content")
@interface Content : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








/// CouponComponent works with <code>Barcode</code> to provide reach experience. It may look like this:
/// <img src="../docs_assets/CouponComponent.png" alt="Coupon Component"/></br>
/// Barcode generation happen on OS level using <code>Machine Readable Object Types</code> such as EAN-13. To learn more visit <a href="https://developer.apple.com/documentation/avfoundation/avmetadataobject.objecttype/1618807-ean13">Official Apple Documentation</a>
/// Coupon is entirly configurable in wingu portal
SWIFT_CLASS("_TtC17winguSDKEssential15CouponComponent")
@interface CouponComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end












/// Contains information about all components and cards. This is a representation of an object created in wingu portal. This is already localized to match device selected language.
SWIFT_CLASS("_TtC17winguSDKEssential4Deck")
@interface Deck : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Collection of files added in wingu portal.
SWIFT_CLASS("_TtC17winguSDKEssential13FileComponent")
@interface FileComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end














/// Gallery Component contain both single images inline in text and multiple pictures.
/// Images are not directly accessible from <code>GalleryComponent</code>, they’re wrapped in <code>WinguImage</code> and plain <code>Image</code> classes.
SWIFT_CLASS("_TtC17winguSDKEssential16GalleryComponent")
@interface GalleryComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Representation of geofence area from wingu portal, Configurable in wingu portal contains usually already prepared content, without extra fetches (like in a case of iBeacon).<br/>
/// In case of missing content in geofence by default it will not be shown in <code>WinguLocations</code> and will not be returned through delegate methods.
SWIFT_CLASS("_TtC17winguSDKEssential8Geofence")
@interface Geofence : Channel
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








@interface Geofence (SWIFT_EXTENSION(winguSDKEssential))
/// :nodoc:
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end








/// Scanner for geofences. It shared some behaviours from <code>BeaconScanner</code> whenever it makes sense.<br/>
/// <code>GeofenceScanner</code> manage geofences for both background and foreground app state.
SWIFT_CLASS("_TtC17winguSDKEssential15GeofenceScanner")
@interface GeofenceScanner : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains informations about image.
/// For managing images wingu is using <a href="https://cloudinary.com">Cloudinary</a>. In this case <code>uID</code> will contain id of a picture in cloudinary.
SWIFT_CLASS("_TtC17winguSDKEssential5Image")
@interface Image : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








/// Contains information about image before download
SWIFT_CLASS("_TtC17winguSDKEssential13ImageMetadata")
@interface ImageMetadata : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// As a part of analytics interaction is a representation of single event happen in <code>Channel</code> or <code>Content</code>.<br/>
/// It’s automatically triggered by this library or Content library.<br/>
/// <blockquote>
/// <em>Note:</em> Use this class only with disabled automatic sending in <code>WinguAnalytics</code> class.
///
/// </blockquote>
SWIFT_CLASS("_TtC17winguSDKEssential11Interaction")
@interface Interaction : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Location of the channel. Usually connected to <code>Channel</code> object and depends of channel type (<code>Geofence</code>, <code>Beacon</code>…). Please note that any of this fields can be <code>nil</code>.
SWIFT_CLASS("_TtC17winguSDKEssential8Location")
@interface Location : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Location Component is a representation of wingu portal Map.<br/>
/// <img src="../docs_assets/LocationComponent.png" alt="Location Component"/></br>
/// This component using standard <code>CoreLocation</code> method and arguments and it’s <em>always</em> a circle.
SWIFT_CLASS("_TtC17winguSDKEssential17LocationComponent")
@interface LocationComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Allows you to receive <code>UILocalNotification</code> through wingu platform.<br/>
/// <blockquote>
/// <em>Note:</em> wingu not sending push notifications only <code>UILocalNotification</code> whenever near <code>Channel</code>. There is no need to configure Apple Developer Certificate to handle Push Notification when app does not support it.<br/>
///
/// </blockquote>
/// In order to receive notifications there might be different action required for different <code>Channel</code> type.<br/>
SWIFT_CLASS("_TtC17winguSDKEssential20NotificationsManager")
@interface NotificationsManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNUserNotificationCenter;
@class UNNotification;

@interface NotificationsManager (SWIFT_EXTENSION(winguSDKEssential)) <UNUserNotificationCenterDelegate>
/// :nodoc:
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end


/// Contains already localized <code>Deck</code> with <code>Card</code> collection.
SWIFT_CLASS("_TtC17winguSDKEssential4Pack")
@interface Pack : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Usually associated with a <code>Deck</code> and contains information about language of the <code>Deck</code>.
SWIFT_CLASS("_TtC17winguSDKEssential10PackLocale")
@interface PackLocale : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Contain information about deck arrangement.
SWIFT_CLASS("_TtC17winguSDKEssential8Position")
@interface Position : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Representation of rating from wingu portal.<br/>
/// The values 0-5 are fixed and cannot be changed.
SWIFT_CLASS("_TtC17winguSDKEssential15RatingComponent")
@interface RatingComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Representation of separator components in wingu portal.<br/>
/// There is couple of styles of components to be picked, but all should be set in portal.<br/>
/// Type here should be threated as read-only and shouldn’t be overriden.
SWIFT_CLASS("_TtC17winguSDKEssential18SeparatorComponent")
@interface SeparatorComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Survey Monkey component redirect to form of the survey. This is representation of component with a same name in wingu portal.<br/>
/// It is not possible to configure fullscreen. Component only shows preview and redirect to <code>WKWebView</code> that shows fullscreen survey using Survey Monkey responsive version of the website.
SWIFT_CLASS("_TtC17winguSDKEssential21SurveyMonkeyComponent")
@interface SurveyMonkeyComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






















/// Video component is a representation of component from wingu portal.<br/>
/// It’s usually youtube and shown with provided by Google component with trademark and with iframe.</br>
SWIFT_CLASS("_TtC17winguSDKEssential14VideoComponent")
@interface VideoComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










/// Component that trigger third party action from connected website configured in wingu portal<br/>
/// It connects automatically to API and trigger action.
SWIFT_CLASS("_TtC17winguSDKEssential16WebhookComponent")
@interface WebhookComponent : Component
/// :nodoc:
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end












/// Analytics configuration may happen here.<br/>
/// <blockquote>
/// <em>Note</em>: You should disable automatic data gathering if you want to use custom events with <code>Interaction</code> class<br/>
///
/// </blockquote>
/// By default wingu will gather analytics, they can be reviewed in wingu portal.
SWIFT_CLASS("_TtC17winguSDKEssential14WinguAnalytics")
@interface WinguAnalytics : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Single file object associated with <code>FileComponent</code>.
SWIFT_CLASS("_TtC17winguSDKEssential9WinguFile")
@interface WinguFile : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








/// Wrap <code>Image</code> object to provide necessery information about picture before start download.<br/>
/// This class will provide dimensions of selected picture and position among other ones. Position existance in this class usually indicates relation with <code>GalleryComponent</code>
SWIFT_CLASS("_TtC17winguSDKEssential10WinguImage")
@interface WinguImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Use <code>WinguLocations</code> to manage all triggers and locations inside wingu platform.<br/>
/// This class provide a way for managing zones and beacons in SDK. <br/>
/// <blockquote>
/// <em>Note:</em> <code>CLLocationManager</code> shouldn’t be deallocated if notifications are required.
///
/// </blockquote>
SWIFT_CLASS("_TtC17winguSDKEssential14WinguLocations")
@interface WinguLocations : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@class CLBeaconRegion;
@class CLRegion;

@interface WinguLocations (SWIFT_EXTENSION(winguSDKEssential)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
@end




/// Callbacks from <code>CLLocationManagerDelegate</code> needed to make <code>WinguLocationManager</code> working
SWIFT_PROTOCOL("_TtP17winguSDKEssential22WinguLocationsDelegate_")
@protocol WinguLocationsDelegate
@optional
/// Authorization status gives you informations about current state of authorizationStatus.
/// \param authorizationStatus CLAuthorizationStatus, may be called several times, especially in a first run, when we ask user for permissions to use location.
///
- (void)authorizationStatus:(CLAuthorizationStatus)authorizationStatus;
@required
/// Returns always whole list of regions in range
/// \param regions Wingu regions
///
- (void)winguChannels:(NSArray<Channel *> * _Nonnull)channels;
@optional
/// You should reload view attached to beacon with this channel. Object will be always the same as in winguChannels(:) method and this method will always be called after callback from winguChannels(:).
/// \param channel updated channel
///
- (void)updatedContent:(Channel * _Nonnull)channel;
/// Whenever physical object change parameters this will return complete channel object with all updated parameters.
/// \param channel updated channel
///
- (void)updatePhysicalInfo:(Channel * _Nonnull)channel;
/// Some of the channels did change physical characteristics<br/>
/// If channels has some custom sorting or filtering this should be invoked in this place.<br/>
/// func <code>updatePhysicalInfo(:)</code> will provide more details of objects that changed.
/// <blockquote>
/// <em>Note</em> This is a direct callback from <code>CoreLocation</code> method for beacons ranging. It may be called very often depends on your settings.<br/>
///
/// </blockquote>
/// Example: If currently in range is one region this method will get called every second (the same as CoreLocation native). If there is two ranged regions this callback will get called twice in second.<br/>
- (void)updatePhysical;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
